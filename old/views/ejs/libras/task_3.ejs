
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="description" content="Uma p&aacute;gina para anota&ccedil;&atilde;o de v&iacute;deo.">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
<title></title>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
<link href="https://code.getmdl.io/1.3.0/material.indigo-blue.min.css" rel="stylesheet" />
<script defer src="https://code.getmdl.io/1.3.0/material.min.js">
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">
</script>
<script src="https://novaes.tech/include?name=client.min&amp;mime=js">
</script>
<script src="http://code.jquery.com/ui/1.8.21/jquery-ui.min.js">
</script>
<script src="http://jquery.ui.touch-punch.min.js">
</script>


<div style="background:#3F51B5;">
  <center>
    <table>
      <tbody>
        <tr>
          <td id="instructions" style="display:block;max-width:800px;padding:10px;"> 
            <p style="font-size:20px;color:white;" align='center'><b>Place this item at the best place of the video</b></p>
			<p style="font-size:18px;color:white;">1. Drag the item by the video and put it in the best position.</p>
			<p style="font-size:18px;color:white;">2. When you have decided on the best position, click send.</p>
			<p align='center'><a class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" id='bt'    onClick="sendContribution()" style='width: 200px;box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-moz-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-webkit-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);'>SEND</a></p>
          </td>
        </tr>
      </tbody>
    </table>
  </center>
</div>

<div ondrop="drop(event)" ondragover="allowDrop(event)">

	<div draggable='true' ondragstart="drag(event)" style="z-index:9999;position: absolute;top:10px;left:550px;padding:6px;word-wrap: break-word;box-shadow: 0px 0px 81px 0px rgba(0,0,0,0.05);-moz-box-shadow:  0px 0px 81px 0px rgba(0,0,0,0.05);-webkit-box-shadow: 0px 0px 81px 0px rgba(0,0,0,0.05);background-image: linear-gradient(45deg, transparent, blue);border-radius: 50px/50px;opacity:1;font-size:22px;text-align:center;vertical-align: middle; color: rgb(255,255,255);font-style: italic;max-width:240px;" id="tx_point"></div>

	<div style="padding: 10px;">
  		<div  id="player" style="box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-moz-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-webkit-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);">Â </div>
	</div>
	<input id="done" name="done" type="hidden" />
	
<div style='top: 160px;position: absolute;width:100%;height:370px;z-index:9998;opacity: 0;' id="layer"></div>

</div>

<script>

var iniX = 0;
var iniY = 0;
var x = 550;
var y = 0;
var item_width;
var item_height;
var video_width = 640;
var video_height = 360;
var vpad= 0;
var hpad = 0;
var input;
var player;
var delta;
var duration;
var content_type;
var tx_point;
var tag = document.createElement('script');
tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

var image = null;



function allowDrop(ev) {
    event.dataTransfer.effectAllowed  = "all";
    event.dataTransfer.dropEffect     = "copy";
   ev.preventDefault();
}


function drag(ev) {
    ev.dataTransfer.setData("text", ev.target.id);
    iniX = ev.clientX;
    iniY = ev.clientY;
}

function drop(ev) {
    x = ev.clientX - iniX;
    y = ev.clientY - iniY;
    item_height = document.getElementById('tx_point').offsetHeight;
    item_width = document.getElementById('tx_point').offsetWidth;
    if((parseFloat(tx_point.style.left)+parseFloat(x)) < hpad){
        x = hpad;
        tx_point.style.left = 0;
    }
    if((parseFloat(tx_point.style.left)+parseFloat(x)) > (hpad + video_width - item_width)){
        x = hpad + video_width - item_width;
        tx_point.style.left = 0;
    }
    if((parseFloat(tx_point.style.top)+parseFloat(y)) < vpad){
        y = vpad;
        tx_point.style.top = 0;
    }
    if((parseFloat(tx_point.style.top)+parseFloat(y)) > (vpad + video_height - item_height)){
        y = vpad + video_height - item_height;
        tx_point.style.top = 0;
    }
    tx_point.style.left = (parseFloat(tx_point.style.left)+parseFloat(x))+'px';
    tx_point.style.top = (parseFloat(tx_point.style.top)+parseFloat(y))+'px';
}


function readURL(input,output) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
                output.attr('src', e.target.result);
                image = e.target.result;
        }

        reader.readAsDataURL(input.files[0]);
    }
}

function onYouTubeIframeAPIReady() {
  $.getJSON('https://novaes.tech/job', function(data){init(data);});
}

function init(data){
  input = data;
  tx_point = document.getElementById("tx_point");


  tx_point.addEventListener("touchstart", handleStart, false);
  tx_point.addEventListener("touchend", handleEnd, false);
  tx_point.addEventListener("touchcancel", handleCancel, false);
  tx_point.addEventListener("touchleave", handleEnd, false);
  tx_point.addEventListener("touchmove", handleMove, false);
 function handleStart(event) {
      // Handle the start of the touch
  }
 function handleStart(event) {
      // Handle the start of the touch
  }
 function handleEnd(event) {
      // Handle the start of the touch
  }
 function handleCancel(event) {
      // Handle the start of the touch
  }
 function handleMove(event) {
      // Handle the start of the touch
  }
  switch(input.content_type){
        case 'image' :
                tx_point.innerHTML = "<img src='https://novaes.tech/images?name=ico_zoom&mime=png' width=40 height=40><img width=200 height=100  src='"+input.content+"'>";
                break;
        case 'wikipedia' :
                if(input.type == 'theory'){
                        tx_point.innerHTML = "<img src='https://novaes.tech/images?name=wikipedia&mime=jpg' width=40 height=40>"+input.point;
                }else{  
                        tx_point.innerHTML = "<img src='https://novaes.tech/images?name=wikipedia&mime=jpg' width=40 height=40><img width=200 height=100  src='"+input.image+"'>";
                }
                break;
        case 'youtube' : 
                if(input.type == 'theory'){
                        tx_point.innerHTML = "<img src='https://novaes.tech/images?name=youtube&mime=ico' width=40 height=40>"+input.point;
                }else{  
                        tx_point.innerHTML = "<img src='https://novaes.tech/images?name=youtube&mime=ico' width=40 height=40><img width=200 height=100  src='"+input.image+"'>";
                }
                break;
        case 'text' :   
                tx_point.innerHTML = "<img src='https://novaes.tech/images?name=ico_zoom&mime=png' width=40 height=40>"+input.content;
                break;
        default:
                tx_point.innerHTML = input.point;
  }
  
  if(window.innerWidth < 660){
        hpad = 10;
  }else{
        var x = getOffset( document.getElementById('player') ).left; 
        var w = getOffset( document.getElementById('player') ).width; 
        hpad = (w-600-2*x)/2;
  }
  vpad = getOffset( document.getElementById('player') ).top;  
  var tx_size = 240;
  tx_point.style.width = tx_size+'px';
  tx_point.style.left = hpad+'px';
  tx_point.style.top = vpad+'px';



player = new YT.Player(
      'player',
      {
        playerVars: {cc_lang_pref:'en', cc_load_policy: 1, autoplay:0 ,rel: 0, controls: 2, disablekb: 1},
        height: '360',
        width: '640',
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange
        }
      }
    );


}

  
   
  
  
  function onPlayerReady(event) {
    duration = (input.end - input.start) + 0.5;
    player.loadVideoById(input.uri, parseFloat(input.start));
  }
  function onPlayerStateChange(event) {
    if(player.getCurrentTime() > input.end || player.getCurrentTime() < input.start){
      player.seekTo(parseFloat(input.start));
      player.pauseVideo();
    }else{
      if (event.data == YT.PlayerState.PLAYING) {
        setTimeout(restartVideoSection, duration * 1000);
      }
    }
  }
  function restartVideoSection() {
    if(player.getCurrentTime() > input.end){
      player.seekTo(parseFloat(input.start));
      player.pauseVideo();
    }
  }
 
  function getOffset( el ) {
    var _x = 0;
    var _y = 0;
    var _w = el.offsetWidth;// - el.scrollWidth;
    while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {
        _x += el.offsetLeft - el.scrollLeft;
        _y += el.offsetTop - el.scrollTop;
        el = el.offsetParent;
    }
    return { top: _y, left: _x, width: _w  };
}


        
function sendContribution(){
        if(x != '' && y != ''){

    		if (confirm('Are you sure about the position of the item?')) {


                x = parseFloat(tx_point.style.left) - hpad;
                y = parseFloat(tx_point.style.top) - vpad;

                var queryForm = "<form method='post' action='https://novaes.tech/store'>";
                queryForm += "<input type='hidden' id='uri' name='uri'  value='"+input.uri+"' > ";
                queryForm += "<input type='hidden' id='item_id' name='item_id'  value='"+input._id+"' > ";
                queryForm += "<input type='hidden' id='start' name='start'  value='"+input.start+"' > ";
                queryForm += "<input type='hidden' id='end' name='end'  value='"+input.end+"' > ";
                queryForm += "<input type='hidden' id='fingerprint' name='fingerprint'  value='"+input.fingerprint+"' > ";
                queryForm += "<input type='hidden' id='job_id' name='job_id'  value='"+input.job_id+"' > ";
                queryForm += "<input type='hidden' id='item_index' name='item_index'  value='"+input.item_index+"' > ";
                queryForm += "<input type='hidden' id='instant' name='instant'  value='"+input.instant+"' > ";
                queryForm += "<input type='hidden' id='point' name='point'  value='"+input.point+"' > ";
                queryForm += "<input type='hidden' id='x' name='x'  value='"+x+"' > ";
                queryForm += "<input type='hidden' id='y' name='y'  value='"+y+"' > ";
        
                queryForm += "<input type='hidden' id='content_type' name='content_type'  value='"+input.content_type+"' > ";

                queryForm += "<input type='hidden' id='content' name='content'  value='"+input.content+"' > ";
                


                queryForm += "</form>";

                

                $.ajax({
                        type: 'POST',
                        url: $(queryForm).attr('action'),
                        data: $(queryForm).serialize(), 
                        success: function(result, status, request) {done();}
                });
	     }
        }else{
                alert("You forgot to position the item.\nYour contribution is important to us!!!");
        }
}
  function done(){
    var done = document.getElementById("done");
    var bt = document.getElementById("bt");
    bt.style='visibility: hidden;';
    done.value='ok';
    player.stopVideo();
    alert("Thanks, now you can click the FINISH button.");
    //$(location).attr('href', 'thanks');
  }
</script>

