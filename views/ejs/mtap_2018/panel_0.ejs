

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="description" content="Uma p&aacute;gina para anota&ccedil;&atilde;o de v&iacute;deo.">
<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
<title></title>
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
<link href="https://code.getmdl.io/1.3.0/material.indigo-blue.min.css" rel="stylesheet" />
<script defer src="https://code.getmdl.io/1.3.0/material.min.js">
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">
</script>
</script>
<style type="text/css">.modal {
  display: none;
  font-size:30px;
  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
  color: white;
  position: fixed;
  z-index: 100;
  padding-top: 100px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.75);
}
  .modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
  }
  .close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  .close:hover,
  .close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
  }

table {
  border: 1px #c0c0c0 solid;
  width: 100%;
}
table th {
  background-color: #00f;
  color: #fff;
}
table td {
  color: #0c0c0c;
}

</style>
<div style='background:#3F51B5;'>
<center>
  <table>
    <tbody>

          <a class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" id="bt" onclick="aggregate()" style="display:block;height:33px;width: 300px;box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-moz-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-webkit-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);">Proceed Aggregation</a>
<br>
          <a class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" id="bt" onclick="updateConvergence()" style="display:block;height:33px;width: 300px;box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-moz-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);-webkit-box-shadow: 12px 29px 81px 0px rgba(0,0,0,0.75);">Continue Collecting</a>


    </tbody>
  </table>
</center>
</div>

<div id="container"></div>

  </div>


</div>

</div>
<script>

	var vInfo = new Array();
	vInfo[0] = {uri:'ALM8JW3O_3w',start:0,end:119};
	vInfo[1] = {uri:'nWvdxcyI6DY',start:0,end:66};
	vInfo[2] = {uri:'_vbPf-uouqA',start:0,end:116};

	var videos = new Array();
	videos[0] = new Array();
	videos[1] = new Array();
	videos[2] = new Array();



	var mt = new Array();
	mt[0]=0;
	mt[1]=0;
	mt[2]=0;



	var mv = new Array();
	mv[0]=0;
	mv[1]=0;
	mv[2]=0;

	var cv = new Array();
	cv[0]=0;
	cv[1]=0;
	cv[2]=0;

	var marks = new Array();
	marks[0] = new Array();
	marks[1] = new Array();
	marks[2] = new Array();


    	$.getJSON('https://novaes.tech/contributions', function(data){init(data);});



  	function init(c){
		for(var i=0; i<c.length; i++){
			var v=0;
			switch(c[i].uri){
				case 'nWvdxcyI6DY': v=1;break;
				case '_vbPf-uouqA': v=2;break;
			}

			cv[v] = cv[v]+1;

			var m = c[i].marks.split(',');
			for(var j=0; j<m.length; j++){
				videos[v].push(m[j]);
			}

		}




		for(var i=0; i<3; i++){	
			videos[i] = videos[i].sort(function(a, b){return parseFloat(a)-parseFloat(b)});
			var delta = 0;
			for(var j=1; j<videos[i].length; j++){
				if(parseFloat(videos[i][j]) > 0 && parseFloat(videos[i][j-1]) > 0){
					delta += parseFloat(videos[i][j]) - parseFloat(videos[i][j-1]);
				}
			}
			delta /= videos[i].length;

			delta *= 2;

			if(delta < 2){
				delta = 2;
			}

			var cur = parseFloat(videos[i][0]); 
			var cont = 0;
			var dx = 0;
		        for(var j=0; j<videos[i].length; j++){


				mt[i] = mt[i] +1;
				if(parseFloat(videos[i][j]) > 0){	

					if(parseFloat(videos[i][j]) - cur > delta){
						var cvg = 100*cont/cv[v];
						if(cvg >= 18){

							mv[i] = mv[i] + cont;

							dx /= cont;
							marks[i].push({mark:dx,cvg:cvg,cont:cont});
						}
						cur = parseFloat(videos[i][j]);
						dx = cur;
						cont = 1;
					}else{
						cont++;
						dx += parseFloat(videos[i][j]);
					}
				}

	
                        }	


		}

	


		createTable(marks);
	}


	function createTable(list){



console.log(cv,mt,mv,marks,videos);




var container = document.getElementById("container");
table= [];


for(var v=0; v<3; v++){

list_points = list[v];


table.push(
  '<table>',
  '<thead>',
  '<tr>',
  '<th>Video</th>',
  '<th>Contributions</th>',
  '<!--th>Marks from Contributions</th-->',
  '<th>Filtered Marks</th>',
  '<th>Agreement Rate</th>',
  '<th>Extracted Segments</th>',
  '</tr>',
  '</thead>',
  '<tbody>',
'<tr align=center>',
'<td>',vInfo[v].uri,'</td>',
'<!--td>',cv[v],'</td-->',
'<td>',mt[v],'</td>',
'<td>',mv[v],'</td>',
'<td>',Math.ceil(100*mv[v]/mt[v]),'%</td>',
'<td>',marks[v].length,'</td>',
  '</tbody>',
  '</table>',
  '<table>',
  '<thead>',
  '<tr>',
  '<th>Done</th>',
  '<th>Instant</th>',
  '<th>Convergence</th>',
  '</tr>',
  '</thead>',
  '<tbody>'
);







for(var i=0; i<list_points.length; i++){
var point = list_points[i];









var color = '#00C060';
var checked = 'checked';
if(point.cvg < 30) color = '#00FA9A';
if(point.cvg < 20){
	color = '#FFD700';
	checked = null;
}
if(point.cvg < 17) color = '#F4A460';
if(point.cvg <= 15) color = '#CD5C5C';




table.push(
  '<tr bgcolor="'+color+'" align=center >',
  '<td align="center"><input type="checkbox" name="ck" '+checked+'  ></td>',
  '<td><b>'+point.mark+'</b></td>',
  '<td><b>'+Math.ceil(point.cvg)+'%'+'</b></td>',
  '</tr>'
);

}

table.push(
  '</tbody>',
  '</table>'
);


}



container.innerHTML = table.join("\n");

	}


	function addContribution(groups, c){
		var i;
		for(i=0; i<groups.length; i++){
			if(parseInt(groups[i].segment.start) == parseInt(c.start)){
				groups[i].contributions.push(c);
				break;
			}
		}
	}

        function levenshtein(a, b){
                var tmp;
                if (a.length === 0) { return b.length; }
                if (b.length === 0) { return a.length; }
                if (a.length > b.length) { tmp = a; a = b; b = tmp; }

                var i, j, res, alen = a.length, blen = b.length, row = Array(alen);
                for (i = 0; i <= alen; i++) { row[i] = i; }

                for (i = 1; i <= blen; i++) {
                        res = i;
                        for (j = 1; j <= alen; j++) {
                                tmp = row[j - 1];
                                row[j - 1] = res;
                                res = b[i - 1] === a[j - 1] ? tmp : Math.min(tmp + 1, Math.min(res + 1, row[j] + 1));
                        }
                }
                return res;
        }


	function aggregate(){
		alert('Aggregate');

	}

	function updateConvergence(){
		var convergeds = new Array();
		var dones = document.getElementsByName("ck");
		for(var i=0; i<dones.length; i++){
			if(dones[i].checked){
				delete list_points[i].fingerprint;
				delete list_points[i].job_id;
				delete list_points[i].candidates;
				delete list_points[i].contributions;
				delete list_points[i]._id;
				convergeds.push(list_points[i]);
			}
		}

	      $.ajax({
	        	type: 'POST',
      	 	 	url: 'https://novaes.tech/updateConvergence',
        		data: {'points':convergeds},
	        	success: function(result, status, request) {done(result);}
      		});
	}

        function aggregate(){
		var contributions = new Array();
		for(var i=0; i<3; i++){
			for(var j=1; j<marks[i].length; j++){
				var c = {};
				c.uri = vInfo[i].uri;
				c.start = marks[i][j-1].mark;
				c.end = marks[i][j].mark;
				contributions.push(c);
			}
		}
/*

                var convergeds = new Array();
                var dones = document.getElementsByName("ck");
                for(var i=0; i<dones.length; i++){
                        if(dones[i].checked){
                                convergeds.push(contributions[i]);
                        }
                }


console.log(convergeds);
*/

console.log(contributions);

              $.ajax({
                        type: 'POST',
                        url: 'https://novaes.tech/aggregate',
                        data: {'points':contributions},
                        success: function(result, status, request) {done(result);}
                });
        }




	function done(result){
		alert('Success');
	}

 
</script>



